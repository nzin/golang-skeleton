// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "golang-skeleton is a skeleton application The base path for all the APIs is \"/api/v1\".\n",
    "title": "golang-skeleton",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "description": "Check if Flagr is healthy",
        "tags": [
          "health"
        ],
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "status of health check",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "App: List todos",
        "operationId": "listTodos",
        "responses": {
          "200": {
            "description": "list all todos",
            "schema": {
              "type": "object",
              "properties": {
                "todos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/todo"
                  }
                }
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "app"
        ],
        "summary": "App: Create a todo",
        "operationId": "createTodo",
        "parameters": [
          {
            "description": "create a todo",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "todo body",
                  "type": "string",
                  "minLength": 1
                },
                "title": {
                  "description": "todo title",
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the created todo",
            "schema": {
              "type": "object",
              "properties": {
                "todoID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/todos/{todoID}": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "App: Get Todo card",
        "operationId": "getTodo",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the todo to get",
            "name": "todoID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the todo",
            "schema": {
              "$ref": "#/definitions/todo"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "app"
        ],
        "summary": "App: Update a Todo information",
        "operationId": "putTodo",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the todo to get",
            "name": "todoID",
            "in": "path",
            "required": true
          },
          {
            "description": "update a todo",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "todo body",
                  "type": "string",
                  "minLength": 1
                },
                "title": {
                  "description": "todo title",
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK updated"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "app"
        ],
        "summary": "App: Delete a todo",
        "operationId": "deleteTodo",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the todo",
            "name": "todoID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK deleted"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "health": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "todo": {
      "type": "object",
      "required": [
        "title",
        "body"
      ],
      "properties": {
        "body": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "readOnly": true
        },
        "title": {
          "description": "todo title",
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "tags": [
    {
      "description": "Check if golang-skeleton is healthy",
      "name": "health"
    }
  ],
  "x-tagGroups": [
    {
      "name": "golang-skeleton Management",
      "tags": [
        "app"
      ]
    },
    {
      "name": "Health Check",
      "tags": [
        "health"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "golang-skeleton is a skeleton application The base path for all the APIs is \"/api/v1\".\n",
    "title": "golang-skeleton",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "description": "Check if Flagr is healthy",
        "tags": [
          "health"
        ],
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "status of health check",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "App: List todos",
        "operationId": "listTodos",
        "responses": {
          "200": {
            "description": "list all todos",
            "schema": {
              "type": "object",
              "properties": {
                "todos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/todo"
                  }
                }
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "app"
        ],
        "summary": "App: Create a todo",
        "operationId": "createTodo",
        "parameters": [
          {
            "description": "create a todo",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "todo body",
                  "type": "string",
                  "minLength": 1
                },
                "title": {
                  "description": "todo title",
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the created todo",
            "schema": {
              "type": "object",
              "properties": {
                "todoID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/todos/{todoID}": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "App: Get Todo card",
        "operationId": "getTodo",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the todo to get",
            "name": "todoID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the todo",
            "schema": {
              "$ref": "#/definitions/todo"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "app"
        ],
        "summary": "App: Update a Todo information",
        "operationId": "putTodo",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the todo to get",
            "name": "todoID",
            "in": "path",
            "required": true
          },
          {
            "description": "update a todo",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "todo body",
                  "type": "string",
                  "minLength": 1
                },
                "title": {
                  "description": "todo title",
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK updated"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "app"
        ],
        "summary": "App: Delete a todo",
        "operationId": "deleteTodo",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the todo",
            "name": "todoID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK deleted"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "health": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "todo": {
      "type": "object",
      "required": [
        "title",
        "body"
      ],
      "properties": {
        "body": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "readOnly": true
        },
        "title": {
          "description": "todo title",
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "tags": [
    {
      "description": "Check if golang-skeleton is healthy",
      "name": "health"
    }
  ],
  "x-tagGroups": [
    {
      "name": "golang-skeleton Management",
      "tags": [
        "app"
      ]
    },
    {
      "name": "Health Check",
      "tags": [
        "health"
      ]
    }
  ]
}`))
}
